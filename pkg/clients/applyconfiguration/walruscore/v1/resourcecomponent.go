// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
)

// ResourceComponentApplyConfiguration represents an declarative configuration of the ResourceComponent type for use
// with apply.
type ResourceComponentApplyConfiguration struct {
	Name      *string                               `json:"name,omitempty"`
	Type      *string                               `json:"type,omitempty"`
	Mode      *v1.ResourceComponentMode             `json:"mode,omitempty"`
	Shape     *v1.ResourceComponentShape            `json:"shape,omitempty"`
	Address   *string                               `json:"address,omitempty"`
	Connector *ConnectorReferenceApplyConfiguration `json:"connector,omitempty"`
}

// ResourceComponentApplyConfiguration constructs an declarative configuration of the ResourceComponent type for use with
// apply.
func ResourceComponent() *ResourceComponentApplyConfiguration {
	return &ResourceComponentApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithName(value string) *ResourceComponentApplyConfiguration {
	b.Name = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithType(value string) *ResourceComponentApplyConfiguration {
	b.Type = &value
	return b
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithMode(value v1.ResourceComponentMode) *ResourceComponentApplyConfiguration {
	b.Mode = &value
	return b
}

// WithShape sets the Shape field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Shape field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithShape(value v1.ResourceComponentShape) *ResourceComponentApplyConfiguration {
	b.Shape = &value
	return b
}

// WithAddress sets the Address field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Address field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithAddress(value string) *ResourceComponentApplyConfiguration {
	b.Address = &value
	return b
}

// WithConnector sets the Connector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Connector field is set to the value of the last call.
func (b *ResourceComponentApplyConfiguration) WithConnector(value *ConnectorReferenceApplyConfiguration) *ResourceComponentApplyConfiguration {
	b.Connector = value
	return b
}

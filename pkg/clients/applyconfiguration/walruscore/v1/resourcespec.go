// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ResourceSpecApplyConfiguration represents an declarative configuration of the ResourceSpec type for use
// with apply.
type ResourceSpecApplyConfiguration struct {
	Attributes      *runtime.RawExtension                       `json:"attributes,omitempty"`
	TemplateVersion *TempalteVersionReferenceApplyConfiguration `json:"templateVersionReference,omitempty"`
	Type            *string                                     `json:"type,omitempty"`
	Draft           *bool                                       `json:"draft,omitempty"`
	Stop            *bool                                       `json:"stop,omitempty"`
}

// ResourceSpecApplyConfiguration constructs an declarative configuration of the ResourceSpec type for use with
// apply.
func ResourceSpec() *ResourceSpecApplyConfiguration {
	return &ResourceSpecApplyConfiguration{}
}

// WithAttributes sets the Attributes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Attributes field is set to the value of the last call.
func (b *ResourceSpecApplyConfiguration) WithAttributes(value runtime.RawExtension) *ResourceSpecApplyConfiguration {
	b.Attributes = &value
	return b
}

// WithTemplateVersion sets the TemplateVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TemplateVersion field is set to the value of the last call.
func (b *ResourceSpecApplyConfiguration) WithTemplateVersion(value *TempalteVersionReferenceApplyConfiguration) *ResourceSpecApplyConfiguration {
	b.TemplateVersion = value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ResourceSpecApplyConfiguration) WithType(value string) *ResourceSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithDraft sets the Draft field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Draft field is set to the value of the last call.
func (b *ResourceSpecApplyConfiguration) WithDraft(value bool) *ResourceSpecApplyConfiguration {
	b.Draft = &value
	return b
}

// WithStop sets the Stop field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Stop field is set to the value of the last call.
func (b *ResourceSpecApplyConfiguration) WithStop(value bool) *ResourceSpecApplyConfiguration {
	b.Stop = &value
	return b
}

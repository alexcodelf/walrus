// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceComponentsLister helps list ResourceComponents.
// All objects returned here must be treated as read-only.
type ResourceComponentsLister interface {
	// List lists all ResourceComponents in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceComponents, err error)
	// ResourceComponents returns an object that can list and get ResourceComponents.
	ResourceComponents(namespace string) ResourceComponentsNamespaceLister
	ResourceComponentsListerExpansion
}

// resourceComponentsLister implements the ResourceComponentsLister interface.
type resourceComponentsLister struct {
	indexer cache.Indexer
}

// NewResourceComponentsLister returns a new ResourceComponentsLister.
func NewResourceComponentsLister(indexer cache.Indexer) ResourceComponentsLister {
	return &resourceComponentsLister{indexer: indexer}
}

// List lists all ResourceComponents in the indexer.
func (s *resourceComponentsLister) List(selector labels.Selector) (ret []*v1.ResourceComponents, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceComponents))
	})
	return ret, err
}

// ResourceComponents returns an object that can list and get ResourceComponents.
func (s *resourceComponentsLister) ResourceComponents(namespace string) ResourceComponentsNamespaceLister {
	return resourceComponentsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceComponentsNamespaceLister helps list and get ResourceComponents.
// All objects returned here must be treated as read-only.
type ResourceComponentsNamespaceLister interface {
	// List lists all ResourceComponents in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceComponents, err error)
	// Get retrieves the ResourceComponents from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ResourceComponents, error)
	ResourceComponentsNamespaceListerExpansion
}

// resourceComponentsNamespaceLister implements the ResourceComponentsNamespaceLister
// interface.
type resourceComponentsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceComponents in the indexer for a given namespace.
func (s resourceComponentsNamespaceLister) List(selector labels.Selector) (ret []*v1.ResourceComponents, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceComponents))
	})
	return ret, err
}

// Get retrieves the ResourceComponents from the indexer for a given namespace and name.
func (s resourceComponentsNamespaceLister) Get(name string) (*v1.ResourceComponents, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("resourcecomponents"), name)
	}
	return obj.(*v1.ResourceComponents), nil
}

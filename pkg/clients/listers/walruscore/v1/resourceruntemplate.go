// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceRunTemplateLister helps list ResourceRunTemplates.
// All objects returned here must be treated as read-only.
type ResourceRunTemplateLister interface {
	// List lists all ResourceRunTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceRunTemplate, err error)
	// ResourceRunTemplates returns an object that can list and get ResourceRunTemplates.
	ResourceRunTemplates(namespace string) ResourceRunTemplateNamespaceLister
	ResourceRunTemplateListerExpansion
}

// resourceRunTemplateLister implements the ResourceRunTemplateLister interface.
type resourceRunTemplateLister struct {
	indexer cache.Indexer
}

// NewResourceRunTemplateLister returns a new ResourceRunTemplateLister.
func NewResourceRunTemplateLister(indexer cache.Indexer) ResourceRunTemplateLister {
	return &resourceRunTemplateLister{indexer: indexer}
}

// List lists all ResourceRunTemplates in the indexer.
func (s *resourceRunTemplateLister) List(selector labels.Selector) (ret []*v1.ResourceRunTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceRunTemplate))
	})
	return ret, err
}

// ResourceRunTemplates returns an object that can list and get ResourceRunTemplates.
func (s *resourceRunTemplateLister) ResourceRunTemplates(namespace string) ResourceRunTemplateNamespaceLister {
	return resourceRunTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceRunTemplateNamespaceLister helps list and get ResourceRunTemplates.
// All objects returned here must be treated as read-only.
type ResourceRunTemplateNamespaceLister interface {
	// List lists all ResourceRunTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceRunTemplate, err error)
	// Get retrieves the ResourceRunTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ResourceRunTemplate, error)
	ResourceRunTemplateNamespaceListerExpansion
}

// resourceRunTemplateNamespaceLister implements the ResourceRunTemplateNamespaceLister
// interface.
type resourceRunTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceRunTemplates in the indexer for a given namespace.
func (s resourceRunTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1.ResourceRunTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceRunTemplate))
	})
	return ret, err
}

// Get retrieves the ResourceRunTemplate from the indexer for a given namespace and name.
func (s resourceRunTemplateNamespaceLister) Get(name string) (*v1.ResourceRunTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("resourceruntemplate"), name)
	}
	return obj.(*v1.ResourceRunTemplate), nil
}
